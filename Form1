using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;

namespace task
{
    public partial class Form1 : Form

    {
        /// <summary>
        /// Поле списка токенов, получаемых после лекскического анализа
        /// </summary>
        List<Token> tokens;
        /// <summary>
        /// Поле экземпляр синтаксического анализатора
        /// </summary>
        private SintacsisLL sintacsisLL;

        
        public Form1()
        {
            InitializeComponent();
        }
        /// <summary>
        /// Метод, выполняющий полный анализ исходного кода
        /// </summary>
        private void AnalyzeText()
        {
            // Очистка ListView перед добавлением новых данных
            listView1.Items.Clear();
            listView2.Items.Clear();
            listView3.Items.Clear();

            listBox1.Items.Clear(); // Очистка списка ошибок
            listBox2.Items.Clear(); // Очистка списка ошибок
            listBox3.Items.Clear(); // Очистка списка ошибок


            // Получаем текст из textBox1
            string text = textBox1.Text;

            // Обработка текста с помощью лексического анализатора
            var tokens = LexAnaliz.InterpString(text, listBox3); // Получаем список токенов

            int j = 0;
            foreach (var token in tokens) // Перебираем каждый токен
            {
                // Добавляем токен и его классификацию в ListView

                var item = new ListViewItem(token.Value); // Лексема

                item.SubItems.Add(token.ToString());      // Классификация (тип, номер)
                listView1.Items.Add(item);

                item.SubItems.Add(j.ToString());
                j++;
            }

            // Выполнение синтаксического анализа
            sintacsisLL = new SintacsisLL(tokens, listBox1, listBox2, listView2, listView3);
        }

        /// <summary>
        /// Метод обработчик события клика на кнопку “Анализировать” 
        /// </summary>
        /// <param name="sender">Ссылка на объект, вызвавший событие</param>
        /// <param name="e">Аргументы, содержащие данные о событии</param>
        private void button1_Click(object sender, EventArgs e)
        {
            AnalyzeText(); // Выполняем лексический анализ
        }
        /// <summary>
        /// Метод обработчик события клика на кнопку “Загрузить файл” 
        /// </summary>
        /// <param name="sender">Ссылка на объект, вызвавший событие</param>
        /// <param name="e">Аргументы, содержащие данные о событии</param>
        private void button2_Click(object sender, EventArgs e)
        {
            // Открытие диалога выбора файла
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Title = "Выберите файл для анализа";
            openFileDialog.Filter = "Текстовые файлы (*.txt)|*.txt|Все файлы (*.*)|*.*";

            if (openFileDialog.ShowDialog() == DialogResult.OK) // Если файл выбран
            {
                try
                {
                    // Чтение всего текста из файла
                    string text = File.ReadAllText(openFileDialog.FileName);

                    // Отображение содержимого файла в textBox1
                    textBox1.Text = text;

                    // Выполняем лексический анализ после загрузки файла
                    AnalyzeText();
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Ошибка при загрузке файла: " + ex.Message,
                                    "Ошибка", MessageBoxButtons.OK,
                                     MessageBoxIcon.Error);
                }

            }
        }
    }
}
